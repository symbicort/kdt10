<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>chatBox prac</title>
    <script src="/socket.io/socket.io.js"></script>
<style>
  /* [실습2] 채팅창 UI */
  .chatBox {
    background-color: skyblue;
    width: 50%;
    height: 500px;
    padding: 10px;
    overflow-y: auto;
  }

  .chatBox div {
    margin-top: 3px;
  }

  .chatBox div div {
    display: inline-block;
    padding: 7px;
  }

  .my-chat {
    text-align: right;
  }

  .my-chat div {
    background-color: yellow;
    border-radius: 10px;
    font-size: 13px;
  }

  .other-chat div {
    background-color: white;
    border-radius: 10px;
    font-size: 13px;
  }
  .notice{
            text-align: center;
            color: #005397;
            font-size: 12px;
        }
</style>
    </style>
</head>
<body>
    <div class="chatBox">
        <div class="my-chat">
            <div>홍길동: 안녕?</div>
        </div>
        <div class="other-chat"> 
            <div> 사용자1: 안녕? </div>
        </div>
    </div><br>
    <input type="text" placeholder="내용 입력" id="content">
    <button onclick="inputChat()">전송</button>

    <script>
        const chatBox = document.querySelector('.chatBox');

        async function inputChat(){
            const inputMsg = document.getElementById('content').value;
            await socket.emit('send', {writer: '홍길동', msg: `${inputMsg}`});
        };

        // 소켓 사용을 위한 객체 생성
        const socket = io.connect();

        socket.on('connect', () => {
            console.log('클라이언트 연결 완료 >', socket.id);
        });

        socket.on('notice', (msg) => {
            chatBox.insertAdjacentHTML('beforeend', `<div class='notice'>${msg}</div>`);
        })

        socket.on('view-chat', (data) => {
            chatBox.insertAdjacentHTML('beforeend',`<div class="my-chat"><div> ${data.who}: ${data.msg} </div></div>` )
        })

    </script>
</body>
</html>