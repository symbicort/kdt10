<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic</title>
    <!-- jquery cdn -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

    <!-- axios cdn -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
        div .result {
            font-size: 24px;
            font-weight: 700;
        }
    </style>
</head>

<body>
    <h1>동적 폼 전송 연습</h1>    

    <form action="" name="register">
        <label for="name">이름</label>
        <input type="text" name="name" placeholder="ID는 최소 3글자" id="name" required>
        <br>
        성별
        <input type="radio" name="gender" id="male" value="m" >
        <label for="male">남</label>
        <input type="radio" name="gender" id="female" value="f" >
        <label for="female">여</label>

        <button type="button" onclick="ajaxGet()">Ajax Get 제출</button>
        <button type="button" onclick="ajaxPost()">Ajax Post 제출</button>

        <button type="button" onclick="axiosGet()">Axios Get 제출</button>

        <button type="button" onclick="tryAxios()">tryAxios 제출</button>

        <button type="button" onclick="axiosPost()">Axios Post 제출</button>


        <button type="button" onclick="fetchGet()">fetch Get 제출</button>

        <button type="button" onclick="fetchPost()">fetch posst 제출</button>
        <!-- 동적 폼 전송 결과를 보여줄 곳 -->
        <div class="result"></div>

        <script>
            const resultBox = document.querySelector('.result');

            function ajaxGet(){
                const form = document.forms['register'];
                console.log(form);
                console.log(form.name);
                console.log(form.gender);

                const data = {
                    name : form.name.value,
                    gender : form.gender.value,
                }
                console.log('data > ', data);

                // Ajax로 서버에 Get 요청 보내기
                $.ajax({
                    type: 'get', // 요청의 종류(form 의 method 속성)   
                    url:'/ajax',  // 요청의 경로(=form의 action 속성)
                    data: data, // 요청에 보낼 데이터(서버가 받게 될 값)
                    success: function (data) {
                        console.log(data);
                        resultBox.textContent = `Get /ajax 요청 완료  ${data.name}님의 성별은 ${data.gender}`; 
                    }
                })
            }

            function ajaxPost(){
                const form = document.forms['register'];

                const data = {
                    name: form.name.value,
                    gender: form.gender.value
                }

                $.ajax({
                    type:'post',
                    url:'/ajax',
                    data : data,
                    success: function (data) {
                        console.log(data);
                        resultBox.textConent = `post /ajax 요청 완료 \n ${data.name}님의 성별은 ${data.gender}` 
                    }
                })
                }
            
            function axiosGet() {
                const form = document.forms['register'];
                const data = {
                    name: form.name.value,
                    gender: form.gender.value
                };

                console.log(form.name.checkValidity());
                console.log(form.gender[0].checkValidity());
                console.log(form.gender[1].checkValidity());

                // axios 요청의 결과는 Promise 객체
                // -> then, catch 메서드로 체이닝 가능
                // -> async, await 사용 가능

                // 1) then, catch
                axios({
                    method: 'get',
                    url: '/axios',
                    params: data // 서버로 보낼 데이터
                }).then((response) => {
                    console.log(response);
                    console.log(response.data);

                    const data = response.data;

                    resultBox.textContent = `get /axios 요청 완료 \n ${data.name}님의 성별은 ${data.gender}`
                })

                // 1) then,cath 쿼리 스트링 사용
                // axios({
                //     method: 'get',
                //     url: `/axios?name=${data.name}&gender=${data.gender}`
                // }).then((response) => {
                //     console.log(response.data);

                //     const data = response.data;

                //     resultBox.textContent = `get /axios 요청 완료 \n ${data.name}님의 성별은 ${data.gender}`
                // })

                // 2. async/await + try-catch(예외처리)
                
            }
        
            async function tryAxios() {
                const form = document.forms['register'];
                const data = {
                    name: form.name.value,
                    gender: form.gender.value
                };

                try {
                    if(form.name.checkValidity()){
                        if(data.gender != ''){
                            await axios({
                                method:'get',
                                url: `/axios?name=${data.name}&gender=${data.gender}`
                            });

                            resultBox.textContent = `try /axios 요청 완료 \n ${data.name}님의 성별은 ${data.gender}`
                        } else{
                            resultBox.textContent = '성별을 선택해주세요';
                        }
                    } else{
                        resultBox.textContent = '이름을 입력해주세요';
                    }
                } catch(err) {
                    console.log(err);
                }
            }

            function axiosPost(){
                const form = document.forms['register'];
                const data = {
                    name: form.name.value,
                    gender: form.gender.value
                }

                axios({
                    method: 'post',
                    url:'/axios',
                    data: data
                }).then((response) => {
                    console.log(response);
                    const {name,gender} = response.data;

                    resultBox.textContent = `post /axios 요청 완료 \n ${name}님의 성별은 ${gender}`
                })
            }

            function fetchGet(){
                const form = document.forms['register'];
                const data = {
                    name:form.name.value,
                    gender: form.gender.value
                }

                fetch(`/fetch?name=${data.name}&gender=${data.gender}`, {
                    method: 'get' //default 값이 get
                }).then((response) => {
                    console.log(response);
                    return response.json();
                }).then((data) => {
                    console.log('data : ', data);
                    resultBox.textContent = `get /fetch 요청 완료 \n ${data.name}님의 성별은 ${data.gender}!`
                })
            }
        
            function fetchPost(){
                const form = document.forms['register'];
                const data = {
                    name:form.name.value,
                    gender: form.gender.value
                }

                // fetch - post 메소드 => option 객체가 반드시 필요
                // 1. method post 지정
                // 2. headers: JSON 포맷 사용 선언
                // 3. body: 서버로 보낼 데이터
                fetch(`/fetch`, {
                    method: 'Post',
                    headers: {
                        'Content-Type' : 'application/json',
                    },
                    body: JSON.stringify(data), 
                }).then((response) => {
                    console.log(response);
                    return response.json();
                }).then((data) => {
                    console.log('data : ', data);
                    resultBox.textContent = `post /fetch 요청 완료 \n ${data.name}님의 성별은 ${data.gender}!`
                })
            }
        </script>
    </form>
</body>
</html>
